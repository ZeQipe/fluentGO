openapi: 3.0.0
info:
  title: FluentGo CRM API
  description: API для управления пользователями и тарифами
  version: 1.0.0
  contact:
    name: FluentGo Support

servers:
  - url: http://localhost:8000
    description: Development server
  - url: https://api.fluentgo.com
    description: Production server

paths:
  /crm/api/tariffs:
    get:
      summary: Получение списка тарифов
      description: Возвращает список всех доступных тарифов из файла tariffs.json
      tags:
        - CRM
      responses:
        '200':
          description: Успешное получение списка тарифов
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  tariffs:
                    type: object
                    description: Объект с тарифами
                    additionalProperties: true
              example:
                status: success
                tariffs:
                  free:
                    name: Бесплатный
                    price: 0
                  standart:
                    name: Стандарт
                    price: 990
                  pro:
                    name: Про
                    price: 1990
        '500':
          description: Ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /crm/api/user:
    post:
      summary: Создание нового пользователя
      description: Создает нового пользователя в системе CRM
      tags:
        - CRM
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
            examples:
              minimal:
                summary: Минимальные данные
                value:
                  id: new_user_123
                  user_name: John Doe
                  email: john.doe@example.com
              full:
                summary: Полные данные
                value:
                  id: new_user_456
                  user_name: Jane Smith
                  email: jane.smith@example.com
                  remaining_seconds: 3600
                  permanent_seconds: 1800
                  tariff: pro
                  payment_status: active
                  status: premium
      responses:
        '200':
          description: Пользователь успешно создан
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Пользователь успешно создан
                  data:
                    $ref: '#/components/schemas/UserData'
              example:
                status: success
                message: Пользователь успешно создан
                data:
                  user_id: new_user_123
                  user_name: John Doe
                  email: john.doe@example.com
                  remaining_seconds: 0
                  permanent_seconds: 0
                  tariff: free
                  payment_status: unpaid
                  payment_date: null
                  status: default
        '409':
          description: Пользователь с таким ID уже существует
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: Пользователь с таким ID уже существует
        '500':
          description: Ошибка создания пользователя
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                  - type: object
                    properties:
                      detail:
                        type: string
                        example: Ошибка создания пользователя

  /crm/api/user/{user_id}/balance:
    get:
      summary: Получение баланса пользователя
      description: Возвращает информацию о балансе конкретного пользователя
      tags:
        - CRM
      parameters:
        - name: user_id
          in: path
          required: true
          description: Уникальный идентификатор пользователя
          schema:
            type: string
          example: zeqipe
      responses:
        '200':
          description: Успешное получение баланса
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    $ref: '#/components/schemas/UserBalance'
              example:
                status: success
                data:
                  user_id: zeqipe
                  user_name: zeqipe
                  remaining_seconds: 7200
                  monthly_seconds: 0
                  tariff: standart
                  payment_status: active
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: Пользователь не найден
        '500':
          description: Ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      summary: Обновление баланса пользователя
      description: Обновляет баланс пользователя, тариф или статус оплаты
      tags:
        - CRM
      parameters:
        - name: user_id
          in: path
          required: true
          description: Уникальный идентификатор пользователя
          schema:
            type: string
          example: zeqipe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserBalanceRequest'
            examples:
              add_seconds:
                summary: Добавить секунды
                value:
                  add_remaining_seconds: 3600
              change_tariff:
                summary: Изменить тариф
                value:
                  tariff: pro
                  payment_status: active
              full_update:
                summary: Полное обновление
                value:
                  add_remaining_seconds: 7200
                  tariff: standart
                  payment_status: active
      responses:
        '200':
          description: Баланс успешно обновлен
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Баланс обновлен
                  data:
                    $ref: '#/components/schemas/UserBalance'
              example:
                status: success
                message: Баланс обновлен
                data:
                  user_id: zeqipe
                  user_name: zeqipe
                  remaining_seconds: 10800
                  monthly_seconds: 0
                  tariff: standart
                  payment_status: active
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: Пользователь не найден
        '500':
          description: Ошибка обновления данных
          content:
            application/json:
              schema:
                type: object
                oneOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                  - type: object
                    properties:
                      detail:
                        type: string
                        example: Ошибка обновления данных

  /crm/api/user/{user_id}/status:
    put:
      summary: Изменение статуса пользователя
      description: Изменяет статус (роль/привилегии) пользователя в системе
      tags:
        - CRM
      parameters:
        - name: user_id
          in: path
          required: true
          description: Уникальный идентификатор пользователя
          schema:
            type: string
          example: zeqipe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserStatusRequest'
            examples:
              admin:
                summary: Назначить администратором
                value:
                  status: admin
              vip:
                summary: Назначить VIP статус
                value:
                  status: vip
              moderator:
                summary: Назначить модератором
                value:
                  status: moderator
      responses:
        '200':
          description: Статус успешно изменен
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Статус пользователя изменен на 'admin'
                  data:
                    type: object
                    properties:
                      user_id:
                        type: string
                        example: zeqipe
                      user_name:
                        type: string
                        example: zeqipe
                      status:
                        type: string
                        example: admin
                      email:
                        type: string
                        example: test@example.com
                      tariff:
                        type: string
                        example: standart
                      payment_status:
                        type: string
                        example: active
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: Пользователь не найден
        '500':
          description: Ошибка обновления статуса
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ErrorResponse'
                  - type: object
                    properties:
                      detail:
                        type: string
                        example: Ошибка обновления статуса

components:
  schemas:
    CreateUserRequest:
      type: object
      required:
        - id
        - user_name
        - email
      properties:
        id:
          type: string
          description: Уникальный идентификатор пользователя
          example: new_user_123
        user_name:
          type: string
          description: Имя пользователя
          example: John Doe
        email:
          type: string
          format: email
          description: Email пользователя (обязательное поле)
          example: john.doe@example.com
        remaining_seconds:
          type: integer
          description: Сгораемые секунды
          default: 0
          example: 0
        permanent_seconds:
          type: integer
          description: Несгораемые секунды
          default: 0
          example: 0
        tariff:
          type: string
          description: Тарифный план
          enum: [free, standart, pro]
          default: free
          example: free
        payment_status:
          type: string
          description: Статус оплаты
          enum: [active, unpaid, expired]
          default: unpaid
          example: unpaid
        payment_date:
          type: integer
          nullable: true
          description: Дата оплаты (timestamp)
          example: null
        status:
          type: string
          description: Статус/роль пользователя в системе
          default: default
          example: default
        iat:
          type: integer
          nullable: true
          description: JWT issued at timestamp
          example: null
        exp:
          type: integer
          nullable: true
          description: JWT expiration timestamp
          example: null

    UserData:
      type: object
      properties:
        user_id:
          type: string
          description: Уникальный идентификатор пользователя
          example: new_user_123
        user_name:
          type: string
          description: Имя пользователя
          example: John Doe
        email:
          type: string
          format: email
          description: Email пользователя
          example: john.doe@example.com
        remaining_seconds:
          type: integer
          description: Оставшиеся секунды (сгораемые)
          example: 0
        permanent_seconds:
          type: integer
          description: Несгораемые секунды
          example: 0
        tariff:
          type: string
          description: Текущий тариф пользователя
          enum: [free, standart, pro]
          example: free
        payment_status:
          type: string
          description: Статус оплаты
          enum: [active, unpaid, expired]
          example: unpaid
        payment_date:
          type: integer
          nullable: true
          description: Дата оплаты (timestamp)
          example: null
        status:
          type: string
          description: Статус/роль пользователя в системе
          example: default

    UserBalance:
      type: object
      properties:
        user_id:
          type: string
          description: Уникальный идентификатор пользователя
          example: zeqipe
        user_name:
          type: string
          description: Имя пользователя
          example: zeqipe
        remaining_seconds:
          type: integer
          description: Оставшиеся секунды (сгораемые)
          example: 7200
        monthly_seconds:
          type: integer
          description: Месячные секунды (пока не реализовано)
          example: 0
        tariff:
          type: string
          description: Текущий тариф пользователя
          enum: [free, standart, pro]
          example: standart
        payment_status:
          type: string
          description: Статус оплаты
          enum: [active, unpaid, expired]
          example: active

    UpdateUserBalanceRequest:
      type: object
      properties:
        add_remaining_seconds:
          type: integer
          nullable: true
          description: Количество секунд для добавления к балансу (может быть отрицательным)
          example: 3600
        add_monthly_seconds:
          type: integer
          nullable: true
          description: Количество месячных секунд (пока не реализовано)
          example: 0
        tariff:
          type: string
          nullable: true
          description: Новый тариф пользователя
          enum: [free, standart, pro]
          example: standart
        payment_status:
          type: string
          nullable: true
          description: Новый статус оплаты
          enum: [active, unpaid, expired]
          example: active

    UpdateUserStatusRequest:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          description: Новый статус/роль пользователя в системе (admin, moderator, vip, user, premium, trial и т.д.)
          example: admin

    ErrorResponse:
      type: object
      properties:
        status:
          type: string
          example: error
        message:
          type: string
          example: Ошибка получения данных

tags:
  - name: CRM
    description: Операции для управления пользователями и тарифами

