version: '3.8'

services:
  # FastAPI приложение (продакшен)
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: fluentgo_app_prod
    restart: always
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - DEBUG=false
      - COOKIE_SECURE=true
    env_file:
      - .env
    volumes:
      - ./users.db:/app/users.db
      - ./temp:/app/temp
      - ./static:/app/static:ro
      - ./tariffs.json:/app/tariffs.json:ro
      - app_logs:/app/logs
    networks:
      - fluentgo_network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8055/api/test-db')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # Nginx прокси (продакшен)
  nginx:
    image: nginx:alpine
    container_name: fluentgo_nginx_prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    networks:
      - fluentgo_network
    depends_on:
      - app
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'

  # Redis для кэширования
  redis:
    image: redis:7-alpine
    container_name: fluentgo_redis_prod
    restart: always
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/etc/redis/redis.conf:ro
    networks:
      - fluentgo_network
    command: redis-server /etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  # Мониторинг (опционально)
  watchtower:
    image: containrrr/watchtower
    container_name: fluentgo_watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=3600
      - WATCHTOWER_INCLUDE_STOPPED=true
    command: --interval 3600 --cleanup

networks:
  fluentgo_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis_data:
    driver: local
  app_logs:
    driver: local
  nginx_logs:
    driver: local
